X <- eigen(A)$vectors
X
t(X[,1])
t(X[,1]) %*% x[,2]
t(X[,1]) %*% X[,2]
A <- matrix(c(0, a, a, 0),nrow=2,byrow=T)
X <- eigen(A)v$ectors
A <- matrix(c(0, a, a, 0),nrow=2,byrow=T)
X <- eigen(A)v$ectors
A <- matrix(c(0, a, a, 0),nrow=2,byrow=T)
X <- eigen(A)$vectors
t(X[,1]) %*% X[,2]
round(t(X[,1]) %*% X[,2],2)
A <- matrix(c(0, a, a, 0),nrow=2,byrow=T)
A
X <- eigen(A)$vectors
round(t(X[,1]) %*% X[,2],2)
a <- complex(real=1, imaginary = 1)
A <- matrix(c(0, a, Conj(a), 0),nrow=2,byrow=T)
A
X <- eigen(A)$vectors
round(t(X[,1]) %*% X[,2],2)
a <- complex(real=1, imaginary = 1)
A <- matrix(c(0, a, Conj(a), 0),nrow=2,byrow=T)
A
round(t(Conj(X[,1])) %*% X[,2],2)
A_m <- -A
A_m
A_m <- Cong(t(-A_m))
A_m <- -A
A_m == Cong(t(-A_m))
A_m == Conj(t(-A_m))
A <- matrix(c(0, a, a, 0),nrow=2,byrow=T)
A
A <- matrix(c(0, Complex(real = 1, imaginary=1),
Complex(real = -1, imaginary=1), 0),nrow=2,byrow=T)
A <- matrix(c(0, complex(real = 1, imaginary=1),
complex(real = -1, imaginary=1), 0),nrow=2,byrow=T)
A
A == -t(Conj(A))
eigen(A)
X <- eigen(A)
round(t(Conj(X[,1])) %*% X[,2],2)
round(t(Conj(X[,1])) %*% X[,2],2)
X <- eigen(A)
round(t(Conj(X[,1])) %*% X[,2],2)
X <- eigen(A)$vectors
round(t(Conj(X[,1])) %*% X[,2],2)
2934.84-446.28
sqrt(109)
rnorm
?rnorm
pnorm(0)
pi
p <- function(c) {
1-2*pnorm(-1/c) + (2*c/sqrt(2*pi))(exp(-1/(2*c^2))-1)
}
p(1)
pr <- function(c) {
1-2*pnorm(-1/c) + (2*c/sqrt(2*pi))(exp(-1/(2*c^2))-1)
}
pr(1)
c=1
1-2*pnorm(-1/c)
2*c/sqrt(2*pi)
exp(-1/(2*c^2))
(2*c/sqrt(2*pi))(exp(-1/(2*c^2))-1)
pr <- function(c) {
1-2*pnorm(-1/c) + (2*c/sqrt(2*pi))*(exp(-1/(2*c^2))-1)
}
pr(1)
seq(0,10,by=0.01)
x <- seq(0,10,by=0.01)
x <- x[x!=0]
length()
length(x)
head(x)
d <- data.frame(x=x,y=sapply(x,pr)
)
head(d)
require(ggplot2)
qplot(x,y,data=d, geom="line")
tail(d)
head(d)
pr <- function(c) {
pr <- function(c) {
1-2*pnorm(-1/c) + (2*c/sqrt(2*pi))*(exp(-1/(2*c^2))-1)
}
pr(1)
d <- data.frame()
0
)
pr <- function(c) {
1-2*pnorm(-1/c) + (2*c/sqrt(2*pi))*(exp(-1/(2*c^2))-1)
}
pr(1)
d <- data.frame()
x <- seq(0,10,by=0.01)
d <- data.frame(x=x,y=sapply(x,pr))
require(ggplot2)
qplot(x,y,data=d, geom="line")
?theme
qplot(x,y,data=d, geom="line") + theme(axis.text.x = element_text(10))
qplot(x,y,data=d, geom="line") + theme(axis.text.x = element_text(size=10))
qplot(x,y,data=d, geom="line") + theme(axis.text.x = element_text(size=10))
qplot(x,y,data=d, geom="line") + theme(axis.text.x = element_text(size=15))
qplot(x,y,data=d, geom="line")
+ theme(axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15))
qplot(x,y,data=d, geom="line") \
+ theme(axis.text.x = element_text(size = 15), \
axis.text.y = element_text(size = 15))
(qplot(x,y,data=d, geom="line")
+ theme(axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15)))
require(ggplot2)
(qplot(x,y,data=d, geom="line") + xlab("C") + ylab("概率") + ggtitle("")
+ theme(axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15)))
require(ggplot2)
(qplot(x,100*y,data=d, geom="line") + xlab("C") + ylab("概率") + ggtitle("")
+ theme(axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15)))
(qplot(x,100*y,data=d, geom="line") + xlab("C") + ylab("概率%") + ggtitle("")
+ theme(axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15)))
?xlab
?theme
text_size <- element_text(size = 15)
(qplot(x,100*y,data=d, geom="line") + xlab("C") + ylab("概率%") + ggtitle("")
+ theme(axis.text.x = text_size,
axis.text.y = text_size,
axis.text = text_size))
(qplot(x,100*y,data=d, geom="line") + xlab("C") + ylab("概率%") + ggtitle("")
+ theme(axis.text.x = text_size,
axis.text.y = text_size,
axis.text.title = text_size))
(qplot(x,100*y,data=d, geom="line") + xlab("C") + ylab("概率%") + ggtitle("")
+ theme(axis.text.x = text_size,
axis.text.y = text_size,
axis.title = text_size))
text_size <- element_text(size = 25)
(qplot(x,100*y,data=d, geom="line") + xlab("C") + ylab("概率%") + ggtitle("")
+ theme(axis.text.x = text_size,
axis.text.y = text_size,
axis.title = text_size))
text_size <- element_text(size = 25)
(qplot(x,100*y,data=d, geom="line") + xlab("C") + ylab("概率%") + ggtitle("")
+ theme(axis.text = text_size,
axis.title = text_size))
text_size <- element_text(size = 15)
(qplot(x,100*y,data=d, geom="line") + xlab("C") + ylab("概率%") + ggtitle("")
+ theme(axis.text = text_size,
axis.title = text_size))
text_size <- element_text(size = 19)
(qplot(x,100*y,data=d, geom="line") + xlab("C") + ylab("概率%") + ggtitle("")
+ theme(axis.text = text_size,
axis.title = text_size))
pr <- function(c) {
1-2*pnorm(-1/c) + (2*c/sqrt(2*pi))*(exp(-1/(2*c^2))-1)
}
x <- seq(0,10,by=0.01)
d <- data.frame(x=x,y=sapply(x,pr))
require(ggplot2)
text_size <- element_text(size = 19)
(qplot(x,100*y,data=d, geom="line") + xlab("C") + ylab("概率%") + ggtitle("")
+ theme(axis.text = text_size,
axis.title = text_size))
p <- qplot(x,100*y,data=d, geom="line") + xlab("C") + ylab("概率%") + ggtitle("")
p <- P + theme(axis.text = text_size,  axis.title = text_size)
p
require(ggplot2)
text_size <- element_text(size = 19)
p <- qplot(x,100*y,data=d, geom="line") + xlab("C") + ylab("概率%") + ggtitle("")
p <- P + theme(axis.text = text_size,  axis.title = text_size)
p
p <- qplot(x,100*y,data=d, geom="line") + xlab("C") + ylab("概率%") + ggtitle("")
p <- P + theme(axis.text = text_size,  axis.title = text_size)
p
text_size <- element_text(size = 19)
p <- qplot(x,100*y,data=d, geom="line") + xlab("C") + ylab("概率%") + ggtitle("")
p <- p + scale_x_continuous(breaks=0:10)
p <- p + theme(axis.text = text_size,  axis.title = text_size)
p
require(ggplot2)
text_size <- element_text(size = 19)
p <- qplot(x,100*y,data=d, geom="line") + xlab("C") + ylab("概率%") + ggtitle("")
p <- p + scale_x_continuous(breaks=0:10)
p <- p + scale_y_continuous(breaks=seq(0,100,by=5))
p <- p + theme(axis.text = text_size,  axis.title = text_size)
p
require(ggplot2)
text_size <- element_text(size = 19)
p <- qplot(x,100*y,data=d, geom="line") + xlab("C") + ylab("概率%") + ggtitle("")
p <- p + scale_x_continuous(breaks=0:10)
p <- p + scale_y_continuous(breaks=seq(0,100,by=10))
p <- p + theme(axis.text = text_size,  axis.title = text_size)
p
Complex(real=1,imaginary=1)
?complex
complex(real=1,imaginary=1)
a <- complex(real=-1, imaginary=1)
b <- complex(real=-1, imaginary=-1)
a
b
A <- matrix(c(0,a,b,0),nrow=2)
A
A <- matrix(c(0,a,b,0),nrow=2,byrow = T)
A
eigen(A)
eigen(-A)
A
A <- matrix(c(complex(imaginary = -1),a,b,0),nrow=2,byrow = T)
A
a <- complex(real=2, imaginary=1)
b <- complex(real=-2, imaginary=i)
A <- matrix(c(complex(imaginary = -1),a,b,0),nrow=2,byrow = T)
A
eigen(A)
A <- matrix(c(0,a,b,0),nrow=2,byrow = T)
A
eigen(A)
sqrt(5)
uniroot()
pr <- function(c) {
1-2*pnorm(-1/c) + (2*c/sqrt(2*pi))*(exp(-1/(2*c^2))-1)
}
x <- seq(0,10,by=0.01)
d <- data.frame(x=x,y=sapply(x,pr))
require(ggplot2)
text_size <- element_text(size = 19)
p <- qplot(x,100*y,data=d, geom="line") + xlab("C") + ylab("概率%") + ggtitle("")
p <- p + scale_x_continuous(breaks=0:10)
p <- p + scale_y_continuous(breaks=seq(0,100,by=10))
p <- p + theme(axis.text = text_size,  axis.title = text_size)
p
?uniroot
uniroot(pr, c(0.001,10))
f <- function (x, a) x - a
str(xmin <- uniroot(f, c(0, 1), tol = 0.0001, a = 1/3))
str(uniroot(function(x) x*(x^2-1) + .5, lower = -2, upper = 2,
tol = 0.0001))
x <- uniroot(function(x) x*(x^2-1) + .5, lower = -2, upper = 2,
tol = 0.0001)
x
x$root
uniroot(pr, lower = 0.001, upper = 10)
root_fun <- function(target) {
function(c) {
1-2*pnorm(-1/c) + (2*c/sqrt(2*pi))*(exp(-1/(2*c^2))-1) - target
}
}
root_fun_9 <- root_fun(0.9)
x <- seq(0,10,by=0.01)
d <- data.frame(x=x,y=sapply(x,root_fun))
require(ggplot2)
text_size <- element_text(size = 19)
p <- qplot(x,100*y,data=d, geom="line") + xlab("C") + ylab("概率%") + ggtitle("")
p <- p + scale_x_continuous(breaks=0:10)
p <- p + scale_y_continuous(breaks=seq(0,100,by=10))
p <- p + theme(axis.text = text_size,  axis.title = text_size)
p
d <- data.frame(x=x,y=sapply(x,root_fun_9))
require(ggplot2)
text_size <- element_text(size = 19)
p <- qplot(x,100*y,data=d, geom="line") + xlab("C") + ylab("概率%") + ggtitle("")
p <- p + scale_x_continuous(breaks=0:10)
p <- p + scale_y_continuous(breaks=seq(0,100,by=10))
p <- p + theme(axis.text = text_size,  axis.title = text_size)
p
uniroot(root_fun_9, lower = 0.001, upper = 10)
root9 <- uniroot(root_fun_9, lower = 0.001, upper = 10)
pr(root9$root)
root_fun <- function(target) {
function(c) {
1-2*pnorm(-1/c) + (2*c/sqrt(2*pi))*(exp(-1/(2*c^2))-1) - target
}
}
root_fun_9 <- root_fun(0.9)
pr <-  root_fun(0)
x <- seq(0,10,by=0.01)
d <- data.frame(x=x,y=sapply(x,pr))
require(ggplot2)
text_size <- element_text(size = 19)
p <- qplot(x,100*y,data=d, geom="line") + xlab("C") + ylab("概率%") + ggtitle("")
p <- p + scale_x_continuous(breaks=0:10)
p <- p + scale_y_continuous(breaks=seq(0,100,by=10))
p <- p + theme(axis.text = text_size,  axis.title = text_size)
p
root9 <- uniroot(root_fun_9, lower = 0.001, upper = 10)
pr(root9$root)
taste <- read.csv('../data/lsh_sample_data.csv')
setwd("D:/dev/my_git/github/data-mining-papers/LocalitySensitiveHashing/prototype/script")
taste <- read.csv('../data/lsh_sample_data.csv')
lsh_data <- taste
lsh_data$id <- with(lsh_data, paste(app,open_id,sep="-"))
lsh_data$open_id <- NULL
lsh_data$app <- NULL
lsh_data$statis_date <- NULL
lsh_data <- lsh_data[,c(16,1:15)]
rm(taste)
set.seed(567)
bucket_width <- 0.5
k <- 10
l <- 50
sample_size <- 2000
data_index <- sample(1:nrow(lsh_data),sample_size)
feature <- lsh_data[data_index,2:16]
fm <- as.matrix(feature)
head(fm)
sqrt(2)
sqrt(2)*0.01
sqrt(2)*0.05
r1 <- sqrt(2)*0.05
r2 <- sqrt(2)*0.7
root_fun(p1)
uniroot(root_fun(p1),lower = 1e-10, upper = 10)
p1 <- 0.9
p2 <- 0.05
uniroot(root_fun(p1),lower = 1e-10, upper = 10)
uniroot(root_fun(p1),lower = 1e-10, upper = 10)$root
p1 <- 0.7
p2 <- 0.05
uniroot(root_fun(p1),lower = 1e-10, upper = 10)$root
g_i <- function(p) {
uniroot(root_fun(p),lower = 1e-10, upper = 10)$root
}
g_i(0.9)
g_i(0.75)
g_i(0.7)
g_i <- function(p) {
uniroot(root_fun(p),lower = 1e-10, upper = 10, tol = 1e-5)$root
}
r1 / g_i(p1)
r2 / g_i(p2)
r1 <- sqrt(2)*0.05
r2 <- sqrt(2)*0.7
p1 <- 0.7
p2 <-  0.1 # 0.05
g_i <- function(p) {
uniroot(root_fun(p),lower = 1e-10, upper = 10, tol = 1e-5)$root
}
r1 / g_i(p1)
r2 / g_i(p2)
root9 <- uniroot(root_fun_9, lower = 0.001, upper = 10)
pr(root9$root)
r1 <- sqrt(2)*0.05
r2 <- sqrt(2)*0.7
p1 <- 0.7
#p2 <- 0.1
p2 <-  0.05
g_i <- function(p) {
uniroot(root_fun(p),lower = 1e-10, upper = 10, tol = 1e-5)$root
}
r1 / g_i(p1)
r2 / g_i(p2)
root9 <- uniroot(root_fun_9, lower = 0.001, upper = 10)
pr(root9$root)
r1 <- sqrt(2)*0.05
r2 <- sqrt(2)*0.7
p1 <- 0.7
#p2 <- 0.1
p2 <-  0.09
g_i <- function(p) {
uniroot(root_fun(p),lower = 1e-10, upper = 10, tol = 1e-5)$root
}
r1 / g_i(p1)
r2 / g_i(p2)
root9 <- uniroot(root_fun_9, lower = 0.001, upper = 10)
pr(root9$root)
r1 <- sqrt(2)*0.05
r2 <- sqrt(2)*0.7
p1 <- 0.7
#p2 <- 0.1
p2 <-  0.1
g_i <- function(p) {
uniroot(root_fun(p),lower = 1e-10, upper = 10, tol = 1e-5)$root
}
r1 / g_i(p1)
r2 / g_i(p2)
w <- (r1 / g_i(p1) + r1 / g_i(p1))/2
w <- (r1 / g_i(p1) + r1 / g_i(p1))/2
w
w <- (r1 / g_i(p1) + r2 / g_i(p2))/2
w
ln
log(exp(1))
exp(1)
log(1-rho1)
rho1 <- 0.95
rho2 <- 0.05
log(1-rho1)
log(1-rho1) / log(1-p1^k)
log(1-rho2) / log(1-p2^k)
log(1-rho2) / log(1-p2^k)
rho2 <- 0.1
log(1-rho2) / log(1-p2^k)
log(1-rho1) / log(1-p1^k)
log(1-rho2) / log(1-p2^k)
rho1 <- 0.90
rho2 <- 0.1
log(1-rho1) / log(1-p1^k)
log(1-rho2) / log(1-p2^k)
rho1 <- 0.99
rho2 <- 0.1
log(1-rho1) / log(1-p1^k)
log(1-rho2) / log(1-p2^k)
p1 <- 0.7
#p2 <- 0.1
p2 <-  0.1
g_i <- function(p) {
uniroot(root_fun(p),lower = 1e-10, upper = 10, tol = 1e-5)$root
}
r1 / g_i(p1)
r2 / g_i(p2)
w <- (r1 / g_i(p1) + r2 / g_i(p2))/2
w
p1 <- 0.75
#p2 <- 0.1
p2 <-  0.1
g_i <- function(p) {
uniroot(root_fun(p),lower = 1e-10, upper = 10, tol = 1e-5)$root
}
r1 / g_i(p1)
r2 / g_i(p2)
w <- (r1 / g_i(p1) + r2 / g_i(p2))/2
w
k <- 10
rho1 <- 0.99
rho2 <- 0.1
log(1-rho1) / log(1-p1^k)
log(1-rho2) / log(1-p2^k)
r1 <- 0.5
r2 <- 9.5
p1 <- 0.75
#p2 <- 0.1
p2 <-  0.1
g_i <- function(p) {
uniroot(root_fun(p),lower = 1e-10, upper = 10, tol = 1e-5)$root
}
r1 / g_i(p1)
r2 / g_i(p2)
w <- (r1 / g_i(p1) + r2 / g_i(p2))/2
w
r1 <- 0.5
r2 <- 9.5
p1 <- 0.75
p2 <- 0.1
#p2 <-  0.1
r1 / g_i(p1)
r2 / g_i(p2)
w <- (r1 / g_i(p1) + r2 / g_i(p2))/2
w
p1 <- 0.75
p2 <- 0.01
#p2 <-  0.1
r1 / g_i(p1)
r2 / g_i(p2)
p1 <- 0.75
p2 <- 0.05
#p2 <-  0.1
r1 / g_i(p1)
r2 / g_i(p2)
p2_too_small <- 0.05 # 太小
p2 <-  0.1
r2 / g_i(p2_too_small)
r1 / g_i(p1)
r2 / g_i(p2)
r2 / g_i(p2_too_small)
w <- (r1 / g_i(p1) + r2 / g_i(p2))/2
w
k <- 10
rho1 <- 0.99
rho2 <- 0.1
log(1-rho1) / log(1-p1^k)
log(1-rho2) / log(1-p2^k)
k <- 10
rho1 <- 0.75
rho2 <- 0.1
log(1-rho1) / log(1-p1^k)
log(1-rho2) / log(1-p2^k)
k <- 10
rho1 <- 0.85
rho2 <- 0.1
log(1-rho1) / log(1-p1^k)
log(1-rho2) / log(1-p2^k)
k <- 10
rho1 <- 0.95
rho2 <- 0.1
log(1-rho1) / log(1-p1^k)
log(1-rho2) / log(1-p2^k)
1-(1-p1^k)^L
p1
1-(1-p1^k)
(1-p1^k)^L
L
L <- ceiling(log(1-rho1) / log(1-p1^k))
1-(1-p1^k)^L
1-(1-p2^k)^L
rho2 <- 0.01
log(1-rho1) / log(1-p1^k)
log(1-rho2) / log(1-p2^k)
1-(1-p1^k)^L
1-(1-p2^k)^L
rho1 <- 0.99
rho2 <- 0.01
log(1-rho1) / log(1-p1^k)
log(1-rho2) / log(1-p2^k)
rho1 <- 0.99
rho2 <- 0.01
log(1-rho1) / log(1-p1^k)
log(1-rho2) / log(1-p2^k)
